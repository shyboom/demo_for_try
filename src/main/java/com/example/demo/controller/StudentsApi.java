/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.22).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.example.demo.controller;

import com.example.demo.dto.Student;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-10-21T07:39:59.895Z[GMT]")
@Api(value = "students", description = "the students API")
public interface StudentsApi {

    @ApiOperation(value = "Add a student", nickname = "addStudent", notes = "Student's name and id are needed.", tags={ "Student", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Add a new student successfully") })
    @RequestMapping(value = "/students",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addStudent(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Student body
);


    @ApiOperation(value = "Get all students", nickname = "getAllStudent", notes = "Return a list containing all students.", response = Student.class, responseContainer = "List", tags={ "Student", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "A list of students", response = Student.class, responseContainer = "List"),
        @ApiResponse(code = 404, message = "There is no Student."),
        @ApiResponse(code = 500, message = "Unexpected error.") })
    @RequestMapping(value = "/students",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Student>> getAllStudent();


    @ApiOperation(value = "Update a student'information", nickname = "updateStudent", notes = "Student's name and id are needed and Student must be exist.", tags={ "Student", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Update successfully"),
        @ApiResponse(code = 404, message = "Student is not found") })
    @RequestMapping(value = "/students",
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> updateStudent(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Student body
);

}

